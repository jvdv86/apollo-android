buildscript {
  apply from: rootProject.file("gradle/dependencies.gradle")

  repositories {
    maven { url "https://plugins.gradle.org/m2/" }
    google()
    mavenCentral()
  }

  dependencies {
    classpath dep.gradleErrorpronePlugin
    classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
  }
}

subprojects {
  apply from: rootProject.file("gradle/dependencies.gradle")

  buildscript {
    repositories {
      maven { url "https://plugins.gradle.org/m2/" }
      maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
      maven { url 'https://jitpack.io' }
      google()
    }

    dependencies {
      classpath dep.kotlinGradlePlugin
      classpath dep.bintrayGradlePlugin
    }
  }

  repositories {
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url 'https://jitpack.io' }
    google()
  }

  apply plugin: "net.ltgt.errorprone"

  configurations.errorprone {
    resolutionStrategy.force dep.errorProneCore // Only upgrade dependency as needed
  }

  group = GROUP
  version = VERSION_NAME

  if (project.name != 'apollo-gradle-plugin') {
    apply plugin: 'checkstyle'

    checkstyle {
      configFile rootProject.file('checkstyle.xml')
      configProperties = ['checkstyle.cache.file': rootProject.file('build/checkstyle.cache')]
      ignoreFailures false
      showViolations true
    }

    task checkstyle(type: Checkstyle) {
      source 'src/main/java'
      include '**/*.java'

      classpath = files()
    }

    tasks.withType(JavaCompile) {
      configure(options) {
        compilerArgs << "-XepDisableWarningsInGeneratedCode" // Ignore generated code
      }
    }

    afterEvaluate {
      if (project.tasks.findByName('check')) {
        check.dependsOn('checkstyle')
      }
    }
  }
}
